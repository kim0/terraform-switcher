name: Build and Release

on:
  push:
    branches:
      - kim0-release
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Build website
        run: |
          set -e
          echo "Building website"
          sudo apt-get update
          sudo apt-get install python3 python3-pip
          pip3 install mkdocs-material
          cd www
          mkdocs gh-deploy --force
          cd ..

      - name: Build application
        run: |
          set -e
          echo "Building application"
          go get -v -t -d ./...
          go vet -tests=false ./...
          go test -v ./...
          mkdir -p build
          go build -v -o build/tfswitch
          find ./test-data/* -type d -print0 | while read -r -d $'\0' TEST_PATH; do
              ./build/tfswitch -c "${TEST_PATH}" || exit 1
          done

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v3

      # - name: Release application
      #   run: |
      #     set -e
      #     source version
      #     export RELEASE_VERSION;
      #     RELEASE_VERSION=$RELEASE_VERSION.${GITHUB_RUN_NUMBER}
      #     export RELEASE_VERSION;
      #     echo $RELEASE_VERSION
      #     mkdir -p /home/runner/bin
      #     export PATH="/home/warrensbox/bin:${PATH}"
      #     rm -rf dist
      #     git config user.email "warren.veerasingam@gmail.com"
      #     git config user.name "warrensbox"
      #     git tag -a ${RELEASE_VERSION} -m "Release Version"
      #     git push origin ${RELEASE_VERSION}
      #     curl -sL https://git.io/goreleaser | bash
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}